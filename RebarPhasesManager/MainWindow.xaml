<Window x:Class="RebarPhaseManager.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
        xmlns:local="clr-namespace:RebarPhaseManager"
        xmlns:viewmodel="clr-namespace:RebarPhaseManager.ViewModel"
        mc:Ignorable="d"
        Title="Rebar Phase Manager"
        Width="700" MinWidth="700" MaxWidth="1000"
        Height="350" MinHeight="350" MaxHeight="800">
    <Window.Resources>
        <viewmodel:MainViewModel x:Key="mainViewModel"/>
        <CollectionViewSource x:Key="cvsPhaseItemsViewModelList" Source="{Binding Source={StaticResource mainViewModel}, Path=PhaseItemsViewModelList}">
            <CollectionViewSource.SortDescriptions>
                <scm:SortDescription PropertyName="Number"/>
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>
        <local:TeklaColorToColorConverter x:Key="colorConverter"/>
    </Window.Resources>

    <Grid DataContext="{StaticResource mainViewModel}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="120"/>
        </Grid.ColumnDefinitions>

        <local:MyDataGrid x:Name="dataGrid" ItemsSource="{Binding Source={StaticResource cvsPhaseItemsViewModelList}}"
                  AutoGenerateColumns="False"
                  VerticalGridLinesBrush="LightGray" BorderBrush="LightGray" GridLinesVisibility="Vertical"
                  FontSize="11" RowHeight="25" ColumnHeaderHeight="28" ColumnWidth="*" Height="Auto" 
                  VerticalAlignment="Top"
                  SelectionMode="Extended" SelectionUnit="FullRow" 
                  SelectedItemsList="{Binding SelectedPhaseItems, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >

            <DataGrid.RowStyle>
                <Style TargetType="{x:Type DataGridRow}">
                    <Setter Property="IsSelected" Value="{Binding Selected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                </Style>
            </DataGrid.RowStyle>

            <DataGrid.Columns>
                <DataGridCheckBoxColumn MinWidth="60" Width="60" Binding="{Binding Visible, UpdateSourceTrigger=PropertyChanged}">
                    <DataGridCheckBoxColumn.HeaderTemplate>
                        <DataTemplate>
                            <local:AllCheckBox IsChecked="{Binding Source={StaticResource mainViewModel}, Path=AllVisible}" 
                                               InvertCheckStateOrder="{Binding Source={StaticResource mainViewModel}, Path=InvertAllChbx}">Visible</local:AllCheckBox>
                        </DataTemplate>
                    </DataGridCheckBoxColumn.HeaderTemplate>
                </DataGridCheckBoxColumn>
                

                <DataGridTemplateColumn Header="Color" Width="40" MinWidth="40">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <StackPanel.Background>
                                    <SolidColorBrush Color="{Binding Color, Converter={StaticResource colorConverter} }"/>
                                </StackPanel.Background>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Header="Number" Width="70" MinWidth="70"
                                    Binding="{Binding Number, Mode=OneWay}"/>
                <DataGridTextColumn Header="Name" Width="90" MinWidth="90"
                                    Binding="{Binding Name, Mode=OneWay}"/>
                <DataGridTextColumn Header="Comment" MinWidth="100"
                                    Binding="{Binding Comment, Mode=OneWay}"/>
                <DataGridTextColumn Header="Current"  Width="55" MinWidth="55"
                                    Binding="{Binding Current, Mode=OneWay}"/>
                <DataGridTextColumn Header="NoOfRebars"  Width="75" MinWidth="75"
                                    Binding="{Binding CountRebars, Mode=OneWay}"/>
            </DataGrid.Columns>
        </local:MyDataGrid>

        <StackPanel Orientation="Vertical" Grid.Column="1">
            <GroupBox x:Name="rebarsGroupBox" Header="Analyzed rebars">
                <StackPanel>
                    <Button Content="Add" Command="{Binding AddRebars}" />
                    <Button Content="Remove" Command="{Binding RemoveRebars}"/>
                    <Button Content="Select by phase" Command="{Binding SelectByPhase}" />
                    <Button Content="Modify phase" Command="{Binding ModifyPhase}" />
                </StackPanel>
            </GroupBox>

            <GroupBox x:Name="phaseGroupBox" Header="Phase items">
                <StackPanel>
                    <Button Content="Add to list" IsEnabled="False" />
                    <Button Content="Remove from list" Command="{Binding RemovePhaseItem}" />
                    <Button Content="Select by rebars" Command="{Binding SelectByRebars}" />
                </StackPanel>
            </GroupBox>

        </StackPanel>

    </Grid>

</Window>
